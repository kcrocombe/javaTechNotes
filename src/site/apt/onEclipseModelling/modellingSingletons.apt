Modelling Singleton Classes

	A singleton class is one where just a single instance is allowed.

	It seems to be relatively easy to implement this feature WITHOUT having to actually model anything; it acn all be done in the implementing class.

	The following seems to be a relatively standard way of doing it ( From Effective Java).

	It needs :

		1. a public static final field to hold and instance of itself;

		2. A private constructor.

---
	public ClassImpl {
		public static final ClassImpl SINGLETON = new ClassImpl();

		private ClassImpl() { set up some stuff };
		...
	}

	The class can then be referenced anywhere as ClassImpl.INSTANCE
---

	The factory method that CodeGen will within the package's Factory class canbe implemented:

---
	public Class1 createClass1() { return Class1Impl.SINGLETON; }
---
